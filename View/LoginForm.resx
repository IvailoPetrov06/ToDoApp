<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RMlOY8UkkDBfUMR++CjbHufVOkqD/9k=
</value>
  </data>
</root>